#!/usr/bin/env bash
set -euo pipefail
IFS=$' \n\t'

export DOTFILES="${DOTFILES:-$HOME/.dotfiles}"
source "$DOTFILES/scripts/core/main.sh"

function list_command_paths() {
	find "$DOTFILES/scripts" -maxdepth 2 -executable -type f | grep -v core | sort
}

function list_contexts() {
	local paths="$1"
	for file in $paths; do echo $(basename $(dirname "$file")); done | uniq
}

function list_paths_for_context() {
	local paths="$1"
	local context="$2"
	echo "$paths" | grep "$context/"
}

function list_commands_for_context() {
	local paths="$1"
	local context="$2"
	local paths="$(echo "$paths" | grep "$context/")"
	for file in $paths; do echo $(basename "$file"); done
}

function find_match() {
	local candidates="$1"
	local query="$2"
	local matches="$(echo "$candidates" | grep $query)"
	local count="$(echo "$matches" | wc -l)"
	if [[ -z "${matches}" ]]; then
		echo -e "No matches for $query\n\nPossible values:\n$candidates"
		exit 1
	elif [ $count -gt 1 ]; then
		echo -e "Multiple matches for $query:\n$matches"
		exit 2
	else 
		RESPONSE=$(echo "$matches" | head -n 1)
	fi
}

function find_context() {
	local contexts="$1"
	local query="$2"
	find_match "$contexts" "$query"
	CTX=$RESPONSE
}

function find_command() {
	local paths="$1"
	local context="$2"
	local query="$3"
	local commands=$(list_commands_for_context "$paths" "$context")
	find_match "$commands" "$query"
	CMD=$(basename $RESPONSE)
}


 context_query="$1"
 cmd_query="$2"
 paths="$(list_command_paths)"
 contexts="$(list_contexts "$paths")"
 find_context "$contexts" "$context_query"
find_command "$paths" "$CTX" "$cmd_query"

shift
shift
bash "${DOTFILES}/scripts/${CTX}/${CMD}" "$@"

