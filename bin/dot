#!/usr/bin/env bash
set -euo pipefail
IFS=$' \n\t'

export DOTFILES="${DOTFILES:-$HOME/.dotfiles}"
source "$DOTFILES/scripts/core/main.sh"

function list_command_paths() {
	find "$DOTFILES/scripts" -maxdepth 2 -executable -type f \
		| grep -v core \
		| sort
}

function list_contexts() {
	local paths="$1"
	echo "$paths" \
		| xargs -I % -d '\n' sh -c 'basename $(dirname %)' \
		| uniq
}

function list_paths_for_context() {
	local paths="$1"; local context="$2"
	echo "$paths" \
		| grep "$context/"
}

function list_commands_for_context() {
	local paths="$1"; local context="$2"

	echo "$paths" \
		| grep "$context/" \
		| xargs -I % -d '\n' basename "%"
}

function find_match() {
	local candidates="$1"
	local query="$2"
	local matches="$(echo "$candidates" | grep $query)"
	local count="$(echo "$matches" | wc -l)"
	if [[ -z "${matches}" ]]; then
		echo -e "No matches for $query\n\nPossible values:\n$candidates"
		exit 1
	elif [ $count -gt 1 ]; then
		echo -e "Multiple matches for $query:\n$matches"
		exit 2
	else 
		RESPONSE=$(echo "$matches" | head -n 1)
	fi
}

function find_context() {
	local contexts="$1"; local query="$2"
	find_match "$contexts" "$query"
	CTX=$RESPONSE
}

function find_command() {
	local paths="$1"; local context="$2"; local query="$3"
	local commands=$(list_commands_for_context "$paths" "$context")
	find_match "$commands" "$query"
	CMD=$(basename $RESPONSE)
}

function has_fzf() {
	command_exists fzf
}

function doc() {
	local paths="$1"
	local match="$2"
	local file="$(echo "$paths" | grep $(echo "$match" | tr " " "/"))"
	extract_help "$file"
}

function remove_colors() {
	 echo "$1" | sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g"
}

if [[ $# -eq 0 ]]; then
	
	paths="$(list_command_paths)"

	if has_fzf; then
		match="$(remove_colors "$(echo "$paths" \
			| xargs -I % sh -c 'tput setaf 1; printf "$(basename $(dirname %))"; printf " "; tput setaf 2; echo "$(basename %)"' \
			| fzf-tmux --height 50% --preview 'dot --match {}')")"
		printf "$match " 
		read args
		if is_empty "$args"; then
			dot $match
		else
			dot $match "$args"
		fi
	else
		list_contexts "$paths"
	fi

elif [[ $# -eq 1 ]]; then

	context_query="$1"
	paths="$(list_command_paths)"
	contexts="$(list_contexts "$paths")"
	find_context "$contexts" "$context_query"
	list_paths_for_context "$paths" "$CTX" | xargs -I % -d '\n' basename "%"

elif [[ $# -gt 1 ]]; then

	paths="$(list_command_paths)"

	if [[ "$1" = "--match" ]]; then
		doc "$paths" "$(remove_colors "$2")"
		exit 0
	fi

	context_query="$1"; cmd_query="$2"
	contexts="$(list_contexts "$paths")"
	find_context "$contexts" "$context_query"
	find_command "$paths" "$CTX" "$cmd_query"

	shift
	shift
	bash "${DOTFILES}/scripts/${CTX}/${CMD}" "$@"

fi